package eu.Qlsxy.etCraft.WarpSystem.commands;import org.bukkit.Location;import org.bukkit.command.Command;import org.bukkit.command.CommandExecutor;import org.bukkit.command.CommandSender;import org.bukkit.entity.Player;import org.bukkit.event.Listener;import org.bukkit.scheduler.BukkitRunnable;import eu.Qlsxy.etCraft.WarpSystem.main.Main;import eu.Qlsxy.etCraft.WarpSystem.utils.FileManager;import eu.Qlsxy.etCraft.WarpSystem.utils.WarpManager;public class WarpCommand implements CommandExecutor, Listener {	FileManager fm, fw;	WarpManager manager = new WarpManager();	@Override	public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {		if (sender instanceof Player) {			Player p = (Player) sender;			fm = new FileManager("plugins//WarpSystem//", "Config.yml");			fw = new FileManager("plugins//WarpSystem//", "Warps.yml");			if (args.length == 0) {				try {					String out = "";					for (String s : manager.getWarps()) {						out = String.format("%s%s%s%s", fm.getString("WarpsCMD.WarpsColor").replace('&', '§'),								fw.getString(s + ".displayname"),								fm.getString("WarpsCMD.WarpsSeparator").replace('&', '§'), out);					}					out = out.trim();					out = out.substring(0, out.length() - 1);					p.sendMessage(fm.getString("WarpsCMD.Messages").replace('&', '§') + out);					return true;				} catch (Exception e) {					fm.getMessage(p, fm.getString("Messages.NoWarpsSet"), "${warp}", "null");					return true;				}			} else if (args.length == 1) {				if (fw.getString(args[0].toLowerCase()) == null) {					fm.getMessage(p, fm.getString("Messages.WarpDoesNotExist"), "${warp}", args[0]);					return false;				}				if (!p.hasPermission(fw.getString(args[0].toLowerCase() + ".permission"))) {					fm.getMessage(p, fm.getString("Messages.NoPermsToWarp"), "${warp}", args[0]);					return false;				}				new BukkitRunnable() {					final Player p = (Player) sender;					private final Location loc = p.getLocation();					private int countdown = fm.getInt("Teleport.Settings.Countdown");					@Override					public void run() {						if (p.getLocation().distance(loc) > 0.2) {							cancel();							fm.getMessageTp(p, fm.getString("Teleport.Messages.Cancelled"), "${warp}", args[0],									"${time}", Integer.toString(countdown));							return;						}						if (countdown > 0) {							fm.getMessageTp(p, fm.getString("Teleport.Messages.Countdown"), "${warp}", args[0],									"${time}", Integer.toString(countdown));						} else {							cancel();							fm.getMessageTp(p, fm.getString("Teleport.Messages.Done"), "${warp}", args[0], "${time}",									Integer.toString(countdown));							p.teleport(manager.getLocation(args[0].toLowerCase()));							manager.addUse(args[0].toLowerCase());						}						countdown--;					}				}.runTaskTimer(Main.instance, 0, 20);			} else if (args.length == 2) {				if (p.hasPermission(fm.getString("Permission.SetupWarps"))) {					if (args[0].equalsIgnoreCase("set")) {						manager.addWarp(p.getLocation(), args[1].toLowerCase(), args[1], "WarpSystem.Use");						fm.getMessagePerm(p, fm.getString("Messages.setWarp"), "${warp}", args[1], "${perm}",								fm.getString("Permission.UseWarps"));					} else if (args[0].equalsIgnoreCase("delete")) {						manager.delWarp(args[1].toLowerCase());						fm.getMessage(p, fm.getString("Messages.deleteWarp"), "${warp}", args[1]);					} else {						fm.getMessage(p, fm.getString("Messages.WrongInput"), "${warp}", args[0]);					}				} else					fm.getMessage(p, fm.getString("Messages.NoPerms"), "${warp}", "null");			} else if (args.length == 3) {				if (p.hasPermission(fm.getString("Permission.SetupWarps"))) {					if (args[0].equalsIgnoreCase("set")) {						manager.addWarp(p.getLocation(), args[1].toLowerCase(), args[1], args[2]);						fm.getMessagePerm(p, fm.getString("Messages.setPermWarp"), "${warp}", args[1], "${perm}",								args[2]);					} else						fm.getMessage(p, fm.getString("Messages.WrongInput"), "${warp}", args[0]);					return false;				} else					fm.getMessage(p, fm.getString("Messages.NoPerms"), "${warp}", "null");			} else				fm.getMessage(p, fm.getString("Messages.WrongInput"), "${warp}", args[0]);		} else			sender.sendMessage("§cYou can execute the command only as a player!");		return false;	}}